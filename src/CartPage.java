
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 59161088
 */
public class CartPage extends javax.swing.JFrame {

    /**
     * Creates new form CartPage
     */
    public CartPage() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_Confirmorder = new javax.swing.JButton();
        btn_Back = new javax.swing.JButton();
        btn_Profile = new javax.swing.JButton();
        ListItem = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList<>();
        btn_Remove = new javax.swing.JButton();
        txtsum = new javax.swing.JLabel();
        lbl_icon = new javax.swing.JLabel();
        lbl_namecart = new javax.swing.JLabel();
        lbl_sumprice = new javax.swing.JLabel();
        lbl_price = new javax.swing.JLabel();
        bgCart = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(589, 422));
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 120, 0, 0);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(70, 220, 0, 0);

        btn_Confirmorder.setBackground(new java.awt.Color(102, 0, 255));
        btn_Confirmorder.setForeground(new java.awt.Color(204, 204, 255));
        btn_Confirmorder.setText("ยืนยันการสั่งสินค้า");
        btn_Confirmorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfirmorderActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Confirmorder);
        btn_Confirmorder.setBounds(430, 330, 130, 30);

        btn_Back.setBackground(new java.awt.Color(255, 0, 0));
        btn_Back.setText("กลับ");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Back);
        btn_Back.setBounds(30, 320, 80, 30);

        btn_Profile.setBackground(new java.awt.Color(102, 102, 255));
        btn_Profile.setText("ข้อมูลส่วนตัว");
        btn_Profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ProfileActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Profile);
        btn_Profile.setBounds(460, 10, 100, 23);

        list1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        list1.setForeground(new java.awt.Color(102, 0, 255));
        ListItem.setViewportView(list1);

        getContentPane().add(ListItem);
        ListItem.setBounds(70, 110, 450, 180);

        btn_Remove.setBackground(new java.awt.Color(255, 0, 0));
        btn_Remove.setForeground(new java.awt.Color(255, 204, 204));
        btn_Remove.setText("ลบสินค้า");
        btn_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Remove);
        btn_Remove.setBounds(350, 330, 73, 30);

        txtsum.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtsum.setText("...");
        getContentPane().add(txtsum);
        txtsum.setBounds(370, 290, 110, 40);

        lbl_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconcart.png"))); // NOI18N
        getContentPane().add(lbl_icon);
        lbl_icon.setBounds(10, 0, 70, 80);

        lbl_namecart.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_namecart.setForeground(new java.awt.Color(255, 255, 255));
        lbl_namecart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_namecart.setText("ตะกร้าสินค้า");
        lbl_namecart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbl_namecart);
        lbl_namecart.setBounds(180, 60, 220, 40);

        lbl_sumprice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_sumprice.setText("ราคารวม : ");
        getContentPane().add(lbl_sumprice);
        lbl_sumprice.setBounds(290, 290, 80, 40);

        lbl_price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_price.setText("บาท");
        getContentPane().add(lbl_price);
        lbl_price.setBounds(480, 290, 40, 40);

        bgCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bgcart.jpg"))); // NOI18N
        bgCart.setInheritsPopupMenu(false);
        bgCart.setMaximumSize(new java.awt.Dimension(589, 422));
        bgCart.setMinimumSize(new java.awt.Dimension(589, 422));
        bgCart.setPreferredSize(new java.awt.Dimension(589, 422));
        getContentPane().add(bgCart);
        bgCart.setBounds(0, 0, 589, 422);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
     public static void showProfileForm() {
        ProfileForm profile = new ProfileForm();
        profile.show();
    }
    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

    private void btn_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RemoveActionPerformed
        ArrayList<Cart> list = CartService.getAllProduct(LoginForm.userCurrent);
        int i = list1.getSelectedIndex();
        String id = list.get(i).getProduct().getId();
        CartService.deleteProduct(id);
    }//GEN-LAST:event_btn_RemoveActionPerformed

    private void btn_ProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ProfileActionPerformed
        showProfileForm();
    }//GEN-LAST:event_btn_ProfileActionPerformed

    private void btn_ConfirmorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConfirmorderActionPerformed
//        CartService.addCartToOrder(UserService.getUser(LoginForm.userCurrent));
        checkCartNull();
        this.hide();


    }//GEN-LAST:event_btn_ConfirmorderActionPerformed
    public static void addListModel(ArrayList<Cart> list) {
        DefaultListModel listModel = new DefaultListModel();
        if (list.isEmpty()) {

            JOptionPane.showMessageDialog(null, "ไม่มีสินค้าอยู่ในตะกร้า");
        } else {
            CartService.checkBtnConfirm();
            for (Cart e : list) {
                listModel.addElement(e.toString() + "     จำนวน   " + e.getNum() + "  ชิ้น");
            }
            CartPage.list1.setModel(listModel);
        }
        CartPage.txtsum.setText("" + CartService.calculatePrice());
    }

    public static void refresh(User user) {
        CartService.checkBtnConfirm();
        DefaultListModel listModel = new DefaultListModel();
        ArrayList<Cart> list = CartService.getAllProduct(user);
        try {
            for (Cart e : list) {
                listModel.addElement(e.toString() + "     จำนวน   " + e.getNum() + "  ชิ้น");
            }
            CartPage.list1.setModel(listModel);
            CartPage.txtsum.setText("" + CartService.calculatePrice());
        } catch (Exception e) {
            CartPage.list1.setModel(listModel);
            CartPage.txtsum.setText("" + CartService.calculatePrice());
        }

    }

    public static void addProductSuccess() {
        JOptionPane.showMessageDialog(null, "เพิ่มสินค้าสำเร็จ");
    }

    public static void checkCartNull() {
        try {
            OrderService.addToOrder();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "กรุณาเลือกสินค้า");
        }
    }

    public static void setButton(ArrayList<Cart> cart) {
        if (cart.size() > 0) {
            btn_Confirmorder.setEnabled(true);
            btn_Remove.setEnabled(true);
        } else {
            btn_Confirmorder.setEnabled(false);
            btn_Remove.setEnabled(false);
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ListItem;
    private javax.swing.JLabel bgCart;
    private javax.swing.JButton btn_Back;
    public static javax.swing.JButton btn_Confirmorder;
    private javax.swing.JButton btn_Profile;
    public static javax.swing.JButton btn_Remove;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbl_icon;
    private javax.swing.JLabel lbl_namecart;
    private javax.swing.JLabel lbl_price;
    private javax.swing.JLabel lbl_sumprice;
    public static javax.swing.JList<String> list1;
    public static javax.swing.JLabel txtsum;
    // End of variables declaration//GEN-END:variables
}
